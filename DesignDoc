-----------------------------------------------------------------------

  		       RISK

	  	MATT JOSEPH JACOB
-----------------------------------------------------------------------

Strategy Interface
    Init(GameMap, playerNumber, nameOfStrategy): --
    Claim(GameState): int Country
    Place(GameState, NumTroops): list of pairs (countries, peopleToPlace)
    Attack(GameState): std::pair(AttackingCountry, DefendingCountry)
    Defend(GameState, int CountryAttacked, int CountryAttacking): NumTroopsNeededToDefend
	Fortify(GameState): list of tuples (fromCountry, toCountry, numberOfTroops)

Game State
    For each country, an allegance, and number of armies
    
Game Map:
    List of bordering countries (std::List of std::pair(int, int))
    Continents:
          Struct of Continents
	          value (how many players get if conquer)
		  list<int> of country
          
Game Flow(Inside Class Game):
    Loop through players and claim
    Loop through players and
        place
        attack
        reinforce
    check for endgame
    
Game Report:
    List of Strategies involved
    how many rounds it took to win
    list ranking strategies (index of winner first, then subsequent losers)

Goals:
    (1)Make Strategy Interface, UI, gameFlow, gameState, gameMap, gameReport 
    (2)Make specific human-controlled strategies
    (3)Organize Dominion Graph
    (4)Analysis Program
    (5)Make it run on UberComputer
    (6)Crossover( Mixing and matching strategies to determine improvement)
    (7)Research and add strategies
    (8)Make Prez
    (9)Make Report

Timeline:
    Week 3/24 - (1), (2)
    Week 3/31 - (3), (4), (7)
    Week 4/7  - (5), (6)
    Week 4/14 - (8), (9) 
    Week 4/21 - 
    Due 4/26!
    
